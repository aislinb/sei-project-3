{"version":3,"sources":["../../src/HeroCarousel/HeroCarousel.jsx"],"names":["HeroCarousel","interval","children","Error","active","setActive","count","React","Children","autoplay","setTimeout","clearTimeout","styles","wrapper","map","child","index","slide","propTypes","PropTypes","number","node","isRequired","defaultProps","memo"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;;;;;AAEA,SAASA,YAAT,CAAsB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAtB,EAA8C;AAC5C,MAAID,QAAQ,GAAG,IAAf,EAAqB;AACnB,UAAM,IAAIE,KAAJ,CACH,gDAA+CF,QAAS,6BADrD,CAAN;AAGD;;AAED,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsB,qBAAS,CAAT,CAA5B;AAEA,wBAAU,MAAM;AACd,UAAMC,KAAK,GAAGC,eAAMC,QAAN,CAAeF,KAAf,CAAqBJ,QAArB,CAAd;;AACA,UAAMO,QAAQ,GAAGC,UAAU,CAAC,MAAM;AAChCL,MAAAA,SAAS,CAACD,MAAM,GAAG,CAAT,IAAcE,KAAd,GAAsB,CAAtB,GAA0BF,MAAM,GAAG,CAApC,CAAT;AACD,KAF0B,EAExBH,QAFwB,CAA3B;AAIA,WAAO,MAAMU,YAAY,CAACF,QAAD,CAAzB;AACD,GAPD,EAOG,CAACP,QAAD,EAAWD,QAAX,EAAqBG,MAArB,EAA6BC,SAA7B,CAPH;AASA,sBACE;AAAK,IAAA,SAAS,EAAEO,4BAAOC;AAAvB,KACGN,eAAMC,QAAN,CAAeM,GAAf,CAAmBZ,QAAnB,EAA6B,CAACa,KAAD,EAAQC,KAAR,kBAC5B;AACE,IAAA,SAAS,EACPZ,MAAM,KAAKY,KAAX,GAAoB,GAAEJ,4BAAOK,KAAM,IAAGL,4BAAOR,MAAO,EAApD,GAAwDQ,4BAAOK;AAFnE,KAKGF,KALH,CADD,CADH,CADF;AAaD;;AAEDf,YAAY,CAACkB,SAAb,GAAyB;AACvBjB,EAAAA,QAAQ,EAAEkB,mBAAUC,MADG;AAEvBlB,EAAAA,QAAQ,EAAEiB,mBAAUE,IAAV,CAAeC;AAFF,CAAzB;AAKAtB,YAAY,CAACuB,YAAb,GAA4B;AAC1BtB,EAAAA,QAAQ,EAAE;AADgB,CAA5B;;4BAIeM,eAAMiB,IAAN,CAAWxB,YAAX,C","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./HeroCarousel.module.css\";\n\nfunction HeroCarousel({ interval, children }) {\n  if (interval < 1200) {\n    throw new Error(\n      `Interval provided to HeroCarousel component (${interval}ms) must be at least 1200ms`\n    );\n  }\n\n  const [active, setActive] = useState(0);\n\n  useEffect(() => {\n    const count = React.Children.count(children);\n    const autoplay = setTimeout(() => {\n      setActive(active + 1 >= count ? 0 : active + 1);\n    }, interval);\n\n    return () => clearTimeout(autoplay);\n  }, [children, interval, active, setActive]);\n\n  return (\n    <div className={styles.wrapper}>\n      {React.Children.map(children, (child, index) => (\n        <div\n          className={\n            active === index ? `${styles.slide} ${styles.active}` : styles.slide\n          }\n        >\n          {child}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nHeroCarousel.propTypes = {\n  interval: PropTypes.number,\n  children: PropTypes.node.isRequired,\n};\n\nHeroCarousel.defaultProps = {\n  interval: 3000,\n};\n\nexport default React.memo(HeroCarousel);\n"],"file":"HeroCarousel.js"}